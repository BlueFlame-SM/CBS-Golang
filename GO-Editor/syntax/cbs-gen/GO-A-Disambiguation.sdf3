module GO-A-Disambiguation
            
imports 
  GO-1-Lexemes
  GO-3-Expressions
  Funcons

// Language "Golang"
    
lexical syntax // Language
  
  // #A Disambiguation
                
  
  
  // ## Identifiers
                   
  
  
  // ## Keywords
                   
  
  
  // ## Expressions
                   
  
  
  // ## Arguments
                   
  
  
syntax // Language
  
  // #A Disambiguation
                
  
  
  // ## Identifiers
                   
  
  
  // ## Keywords
                   
  
  
  // ## Expressions
                   
  
  
  // ## Arguments
                   
  
  
context-free syntax // Language
  
  // #A Disambiguation
                
  
  
  // ## Identifiers
                   
  
  
  // ## Keywords
                   
  
  
  // ## Expressions
                   
  
  
  // ## Arguments
                   
  
  
context-free syntax // Semantics
  
  // #A Disambiguation
                
  
  
  // ## Identifiers
                   
  
  
  // ## Keywords
                   
  
  
  // ## Expressions
                   
  
  
  // ## Arguments
                   
  
  
context-free syntax // Desugaring
  
  // #A Disambiguation
                
  
  
  // ## Identifiers
                   
  
  
  // ## Keywords
                   
  
  
  // ## Expressions
                   
  
  
  // ## Arguments
                   
  
  
variables // Meta-variables
  
  // #A Disambiguation
                
  
  
  // ## Identifiers
                   
  
  
  // ## Keywords
                   
  
  
  // ## Expressions
                   
  
  
  // ## Arguments
                   
  
  
// SDF comments
  
  // #A Disambiguation
                
  
  
  // ## Identifiers
                   
  
  
  lexical syntax
  LEX-identifier = LEX-keyword {reject}
  
  lexical restrictions
  LEX-identifier -/- [a-zA-Z0-9\_]
  
  // ## Keywords
                   
  
  
  lexical restrictions
  LEX-keyword -/- [a-zA-Z0-9\_]
  
  // ## Expressions
                   
  
  
  lexical restrictions
  "<" -/- [\-]
  
  context-free syntax
  L-expression.L-expression--L-expression-BAR-BAR-L-expression =
    L-expression "||" L-expression
     {left}
  L-expression.L-expression--L-expression-AMPERSAND-AMPERSAND-L-expression =
    L-expression "&&" L-expression
     {left}
  L-expression.L-expression--L-expression-L-rel-op-L-expression =
    L-expression L-rel-op L-expression
   {left}
  L-expression.L-expression--L-expression-L-add-op-L-expression =
    L-expression L-add-op L-expression
   {left}
  L-expression.L-expression--L-expression-L-mul-op-L-expression =
    L-expression L-mul-op L-expression
   {left}
  
  context-free priorities
  L-expression.L-expression--L-expression-L-mul-op-L-expression =
    L-expression L-mul-op L-expression
  
  >
  L-expression.L-expression--L-expression-L-add-op-L-expression =
    L-expression L-add-op L-expression
  
  >
  L-expression.L-expression--L-expression-L-rel-op-L-expression =
    L-expression L-rel-op L-expression
  
  >
  L-expression.L-expression--L-expression-AMPERSAND-AMPERSAND-L-expression =
    L-expression "&&" L-expression
  
  >
  L-expression.L-expression--L-expression-BAR-BAR-L-expression =
    L-expression "||" L-expression
  
  
  // ## Arguments
                   
  
  
  context-free syntax
  L-arguments.L-arguments--LPAREN-L-expression-L-commaExpression-S-RPAREN =
    "(" L-expression L-commaExpression* ")"
       {prefer}
  L-arguments.L-arguments--LPAREN-L-expression-L-commaExpression-S-COMMA-RPAREN =
    "(" L-expression L-commaExpression* "," ")"
   {prefer}
  
sorts // ASTs
  T-start
