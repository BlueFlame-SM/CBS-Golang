initialise-giving
initialise-binding
initialise-storing
finalise-safeguarding
multithread
scope(
  collateral(
    bind("lock", exclusive-lock-create),
    bind("main", current-thread)),
  sequential(
    exclusive-lock-sync-else-wait(bound "lock"),
    scope(
      bind(
        "thread",
        thread-activate thread-detached thunk closure sequential(
          print("aquiring"),
          safeguard exclusive-lock-sync-else-wait(bound "lock"),
          print(is-exclusive-lock-holder(bound "lock")))),
      sequential(
        print(1),
        print(2),
        print(3),
        print(4),
        print(5),
        print(6),
        print(7),
        print(8),
        print(9),
        print(10),
        print("granting"),
        exclusive-lock-grant(bound "lock", bound "thread")))))
